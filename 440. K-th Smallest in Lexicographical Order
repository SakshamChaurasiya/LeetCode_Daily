class Solution {
    public int findKthNumber(int n, int k) {
        long curr = 1;
        k -= 1;
        while (k > 0) {
            long steps = getNoSteps(n, curr);
            if (steps <= k) {
                curr += 1;
                k -= steps;
            } else {
                curr *= 10;
                k -= 1;
            }
        }
        return (int) curr;
    }

    private long getNoSteps(long n, long curr) {
        long steps = 0;
        long first = curr;
        long last = curr;
        while (first <= n) {
            steps += Math.min(last, n) - first + 1;
            first *= 10;
            last = last * 10 + 9;
        }
        return steps;
    }
}
